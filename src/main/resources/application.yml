
spring:
  application:
    name: humandelivery

  config:
    import: optional:file:.env[.properties

  kafka:
    bootstrap-servers: localhost:9092,localhost:9093,localhost:9094  # Kafka 브로커들
    consumer:
      group-id: call-group
      auto-offset-reset: earliest  # or latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  datasource:
    url: ${DB_URL:jdbc:h2:tcp://localhost/~/humandelivery}
    username: sa
    password:

  sql:
    init:
      mode: always

#  datasource:
#    url: jdbc:h2:file:C:/_Workplace/Spring_workplace/HumanDelivery/database/h2db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#    username: sa
#    password:


#
#  h2:
#    console:
#      enabled: true
#      path: /h2-console

#  datasource:
#    driver-class-name: ${DB_DRIVER:org.h2.Driver}

  data:
    redis:
      host: localhost
      port: 6379

jwt:
  secret:
    access: "sadpofjaosdjfoapsjdfjaksopdjfpjaskopdjfopasjdpofjapsodfjapsodjfpaoksdjf"
    accessTokenValidTime: "3600000"


logging:
  level:
    org:
      springframework:
        web:
          socket: DEBUG
        messaging: DEBUG
      apache:
        kafka: FATAL
      kafka:
        clients: FATAL
      hibernate:
        SQL: debug
        orm:
          jdbc:
            bind: trace
      org:
        springframework:
          web:
            socket: DEBUG
          messaging: DEBUG
          cache : DEBUG




