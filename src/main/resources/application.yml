spring:
  application:
    name: humandelivery

  config:
    import: optional:file:.env[.properties]

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: none
      dialect: org.hibernate.dialect.H2Dialect
    show-sql: true
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  # H2 Database Connection
  datasource:
    url: ${DB_URL:jdbc:h2:tcp://localhost:9093/~/humandelivery}
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:}

  sql:
    init:
      mode: always

  # H2 Console Activation
  h2:
    console:
      enabled: true
      path: /h2-console

  # Kafka Configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: call-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}

# JWT Configuration
jwt:
  secret:
    access: ${JWT_SECRET_ACCESS:sadpofjaosdjfoapsjdfjaksopdjfpjaskopdjfopasjdpofjapsodfjapsodjfpaoksdjf}
    accessTokenValidTime: ${JWT_ACCESS_TOKEN_VALID_TIME:3600000}

# Logging Level Configuration
logging:
  level:
    org:
      hibernate:
        SQL: debug
        orm:
          jdbc:
            bind: trace
    springframework:
      web:
        socket: DEBUG
      messaging: DEBUG
      cache: DEBUG
