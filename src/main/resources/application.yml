
spring:
  application:
    name: humandelivery

  config:
    import: optional:file:.env[.properties]

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  kafka:
    bootstrap-servers: localhost:9092,localhost:9093,localhost:9094  # Kafka 브로커들
    consumer:
      group-id: call-group
      auto-offset-reset: earliest  # or latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  datasource:
    url: "${DB_URL:jdbc:mysql://localhost:3306/humandelivery}"
    username: root
    password: root

    hikari:
      maximum-pool-size: 400
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 60000


#  datasource:
#    url: jdbc:h2:file:C:/_Workplace/Spring_workplace/HumanDelivery/database/h2db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#    username: sa
#    password:


#
#  h2:
#    console:
#      enabled: true
#      path: /h2-console

#  datasource:
#    driver-class-name: ${DB_DRIVER:org.h2.Driver}

  data:
    redis:
      host: localhost
      port: 6379

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  web:
    socket:
      message-broker:
        enabled: true

jwt:
  secret:
    access: "sadpofjaosdjfoapsjdfjaksopdjfpjaskopdjfopasjdpofjapsodfjapsodjfpaoksdjf"
    accessTokenValidTime: "3600000"




logging:
  level:
    org:
      springframework:
        web:
          socket: DEBUG
        messaging: DEBUG
      apache:
        kafka: FATAL
      kafka:
        clients: FATAL
      hibernate:
        SQL: debug
        orm:
          jdbc:
            bind: trace
      org:
        springframework:
          web:
            socket: DEBUG
          messaging: DEBUG
          cache : DEBUG



# 스프링 액츄에이터의 모든 메트릭 노출 활성화
management:
  endpoints:
    web:
      exposure:
        include: "*"



# 톰캣 메트릭 추가
server:
  tomcat:
    max-connections: 500     # 동시에 처리 가능한 최대 커넥션 수
    accept-count: 200         # 요청 대기 큐 크기 (초과 시 reset 발생 가능)
    threads:
      max: 300
      min-spare: 50


